<?php

namespace Tests\Feature;

use App\Http\Services\PayPalService;
use App\Models\Order;
use App\Models\PaymentMethod;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Log;
use Tests\TestCase;

class PayPalServiceTest extends TestCase
{
    /**
     * A basic feature test example.
     */
    use RefreshDatabase;
    private PayPalService $payPal;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->payPal = $this->app->make(PayPalService::class);
    }

    public function test_can_create_order(): void
    {
        $response = $this->payPal->createOrder(100, 1);
        $this->assertEquals(true, $response['status']);
    }

    public function test_order_amount_cannot_be_less_than_zero()
    {
        $response = $this->payPal->createOrder(-100, 1);
        $this->assertEquals(false, $response['status']);
    }

    public function test_can_get_order_details()
    {
        $response = $this->payPal->createOrder(100, 1);
        $payment_id = $response['id'];
        $response = $this->payPal->getOrderDetails($payment_id);
        $this->assertEquals(true, $response['status']);
    }


}
